export const abfalter = {};

abfalter.basicInfo = {
    name: "abfalter.basicInfo.name",
    base: "abfalter.basicInfo.base",
    spec: "abfalter.basicInfo.spec.",
    mult: "abfalter.basicInfo.mult",
    class: "abfalter.basicInfo.class",
    temp: "abfalter.basicInfo.temp.",
    final: "abfalter.basicInfo.final",
    actual: "abfalter.basicInfo.actual",
    mastery: "abfalter.basicInfo.mastery",
    half: "abfalter.basicInfo.half",
    full: "abfalter.basicInfo.full",
    bonus: "abfalter.basicInfo.bonus",
    ability: "abfalter.basicInfo.ability",
    used: "abfalter.basicInfo.used",
    type: "abfalter.basicInfo.type",
    cost: "abfalter.basicInfo.cost",
    spent: "abfalter.basicInfo.spent",
    yes: "abfalter.basicInfo.yes",
    no: "abfalter.basicInfo.no",
    active: "abfalter.basicInfo.active",
    passive: "abfalter.basicInfo.passive",
    level: "abfalter.basicInfo.level",
    description: "abfalter.basicInfo.description",
    dp: "abfalter.basicInfo.dp",
    mk: "abfalter.basicInfo.mk",
    action: "abfalter.basicInfo.action",
    difficulty: "abfalter.basicInfo.difficulty",
    effect: "abfalter.basicInfo.effect",
    routine: "abfalter.basicInfo.routine",
    easy: "abfalter.basicInfo.easy",
    average: "abfalter.basicInfo.average",
    difficult: "abfalter.basicInfo.difficult",
    vDifficult: "abfalter.basicInfo.vDifficult",
    absurd: "abfalter.basicInfo.absurd",
    almostImp: "abfalter.basicInfo.almostImp",
    impossible: "abfalter.basicInfo.impossible",
    inhuman: "abfalter.basicInfo.inhuman",
    zen: "abfalter.basicInfo.zen",
    extraInfo: "abfalter.basicInfo.extraInfo",
    none: "abfalter.basicInfo.none",
    agility: "abfalter.basicInfo.agility",
    agi: "abfalter.basicInfo.agi",
    consti: "abfalter.basicInfo.consti",
    con: "abfalter.basicInfo.con",
    strength: "abfalter.basicInfo.strength",
    str: "abfalter.basicInfo.str",
    dexerity: "abfalter.basicInfo.dexerity",
    dex: "abfalter.basicInfo.dex",
    intell: "abfalter.basicInfo.intell",
    int: "abfalter.basicInfo.int",
    perception: "abfalter.basicInfo.perception",
    per: "abfalter.basicInfo.per",
    power: "abfalter.basicInfo.power",
    pow: "abfalter.basicInfo.pow",
    willPower: "abfalter.basicInfo.willPower",
    wp: "abfalter.basicInfo.wp",
    attack: "abfalter.basicInfo.attack",
    block: "abfalter.basicInfo.block",
    dodge: "abfalter.basicInfo.dodge",
    defense: "abfalter.basicInfo.defense",
    advInfo: "abfalter.basicInfo.advInfo",
    disadvInfo: "abfalter.basicInfo.disadvInfo",    
    extra: "abfalter.basicInfo.extra",
    remove: "abfalter.basicInfo.remove",
    note: "abfalter.basicInfo.note",
    natura: "abfalter.basicInfo.natura",
    gnosis: "abfalter.basicInfo.gnosis",
    destiny: "abfalter.basicInfo.destiny",
    archeType: "abfalter.basicInfo.archeType",
    shield: "abfalter.basicInfo.shield",
    shieldMax: "abfalter.basicInfo.shieldMax",
    boons: "abfalter.basicInfo.boons",
    critical: "abfalter.basicInfo.critical",
    token: "abfalter.basicInfo.token",
    gender: "abfalter.basicInfo.gender",
    race: "abfalter.basicInfo.race",
    height: "abfalter.basicInfo.height",
    weight: "abfalter.basicInfo.weight",
    age: "abfalter.basicInfo.age",
    exp: "abfalter.basicInfo.exp",
    size: "abfalter.basicInfo.size",
    appear: "abfalter.basicInfo.appear",
    maximum: "abfalter.basicInfo.maximum",
    aamShort: "abfalter.basicInfo.aamShort",
    magic: "abfalter.basicInfo.magic",
    background: "abfalter.basicInfo.background",
    psychic: "abfalter.basicInfo.psychic",
    ki: "abfalter.basicInfo.ki",
    armory: "abfalter.basicInfo.armory",
    bio: "abfalter.basicInfo.bio",
    settings: "abfalter.basicInfo.settings",
    general: "abfalter.basicInfo.general",
    minute: "abfalter.basicInfo.minute",
    hour: "abfalter.basicInfo.hour",
    day: "abfalter.basicInfo.day",
    multiWield: "abfalter.basicInfo.multiWield",
    unarmed: "abfalter.basicInfo.unarmed",
    special: "abfalter.basicInfo.special"
}

abfalter.generalTab = {
    characteristics: "abfalter.generalTab.characteristics",
    opposed: "abfalter.generalTab.opposed",
    atr: "abfalter.generalTab.atr",
    modifier: "abfalter.generalTab.modifier",
    finalOpposed: "abfalter.generalTab.finalOpposed",
    aam: "abfalter.generalTab.aam",
    noa: "abfalter.generalTab.noa",
    resistances: "abfalter.generalTab.resistances",
    movement: "abfalter.generalTab.moevement",
    pen: "abfalter.generalTab.pen",
    fourthMove: "abfalter.generalTab.fourthMove",
    running: "abfalter.generalTab.running",
    lp: "abfalter.generalTab.lp",
    fatigue: "abfalter.generalTab.fatigue",
    regen: "abfalter.generalTab.regen",
    resting: "abfalter.generalTab.resting",
    noRest: "abfalter.generalTab.noRest",
    redPen: "abfalter.generalTab.redPen",
    advant: "abfalter.generalTab.advant",
    disAdvant: "abfalter.generalTab.disAdvant",
    benefit: "abfalter.generalTab.benefit",
    initiative: "abfalter.generalTab.initiative",
    weapon: "abfalter.generalTab.weapon",
    natNum: "abfalter.generalTab.natNum",
    na: "abfalter.generalTab.na",
    totalNat: "abfalter.generalTab.totalNat",
    secAbility: "abfalter.generalTab.secAbility",
    athletics: "abfalter.generalTab.athletics",
    acrobatic: "abfalter.generalTab.acrobatic",
    athleticism: "abfalter.generalTab.athleticism",
    climb: "abfalter.generalTab.climb",
    jump: "abfalter.generalTab.jump",
    ride: "abfalter.generalTab.ride",
    swim: "abfalter.generalTab.swim",
    social: "abfalter.generalTab.social",
    etiquette: "abfalter.generalTab.etiquette",
    intimidate: "abfalter.generalTab.intimidate",
    leadership: "abfalter.generalTab.leadership",
    persuasion: "abfalter.generalTab.persuasion",
    streetwise: "abfalter.generalTab.streetwise",
    style: "abfalter.generalTab.style",
    trading: "abfalter.generalTab.trading",
    perceptive: "abfalter.generalTab.perceptive",
    notice: "abfalter.generalTab.notice",
    search: "abfalter.generalTab.search",
    track: "abfalter.generalTab.track",
    intellectual: "abfalter.generalTab.intellectual",
    animals: "abfalter.generalTab.animals",
    appraisal: "abfalter.generalTab.appraisal",
    architecture: "abfalter.generalTab.architecture",
    herballore: "abfalter.generalTab.herballore",
    history: "abfalter.generalTab.history",
    law: "abfalter.generalTab.law",
    magicAppr: "abfalter.generalTab.magicAppr",
    medicine: "abfalter.generalTab.medicine",
    memorize: "abfalter.generalTab.memorize",
    navigation: "abfalter.generalTab.navigation",
    occult: "abfalter.generalTab.occult",
    science: "abfalter.generalTab.science",
    tactics: "abfalter.generalTab.tactics",
    vigor: "abfalter.generalTab.vigor",
    composure: "abfalter.generalTab.composure",
    featsOfStr: "abfalter.generalTab.featsOfStr",
    withstPain: "abfalter.generalTab.withstPain",
    subterfuge: "abfalter.generalTab.subterfuge",
    disguise: "abfalter.generalTab.disguise",
    hide: "abfalter.generalTab.hide",
    lockpicking: "abfalter.generalTab.lockpicking",
    poisons: "abfalter.generalTab.poisons",
    stealth: "abfalter.generalTab.stealth",
    theft: "abfalter.generalTab.theft",
    traplore: "abfalter.generalTab.traplore",
    creative: "abfalter.generalTab.creative",
    alchemy: "abfalter.generalTab.alchemy",
    animism: "abfalter.generalTab.animism",
    art: "abfalter.generalTab.art",
    dance: "abfalter.generalTab.dance",
    forging: "abfalter.generalTab.forging",
    jewelry: "abfalter.generalTab.jewelry",
    music: "abfalter.generalTab.music",
    runes: "abfalter.generalTab.runes",
    ritualCal: "abfalter.generalTab.ritualCal",
    soh: "abfalter.generalTab.soh",
    tailoring: "abfalter.generalTab.tailoring",
    toymaking: "abfalter.generalTab.toymaking",
    cooking: "abfalter.generalTab.cooking",
    technomagic: "abfalter.generalTab.technomagic",
    piloting: "abfalter.generalTab.piloting",
    elan: "abfalter.generalTab.elan",
    title: "abfalter.generalTab.title",
    gainElan: "abfalter.generalTab.gainElan",
    gainUpperElan: "abfalter.generalTab.gainUpperElan",
    loseElan: "abfalter.generalTab.loseElan",
    addElan: "abfalter.generalTab.addElan",
    elanEdit: "abfalter.generalTab.elanEdit",
    elanGifts: "abfalter.generalTab.elanGifts",
    giftName: "abfalter.generalTab.giftName",
    deity: "abfalter.generalTab.deity",
    perLevel: "abfalter.generalTab.perLevel",
    lifePoints: "abfalter.generalTab.lifePoints",
    addAdvantage: "abfalter.generalTab.addAdvantage",
    addDisadvantage: "abfalter.generalTab.addDisadvantage",
    phr: "abfalter.generalTab.phr",
    dr: "abfalter.generalTab.dr",
    psnr: "abfalter.generalTab.psnr",
    mr: "abfalter.generalTab.mr",
    psyr: "abfalter.generalTab.psyr",
    physicalRes: "abfalter.generalTab.physicalRes",
    diseaseRes: "abfalter.generalTab.diseaseRes",
    poisonRes: "abfalter.generalTab.poisonRes",
    magicRes: "abfalter.generalTab.magicRes",
    psychicRes: "abfalter.generalTab.psychicRes"
}

abfalter.sheet = {
    newItem: "abfalter.sheet.newItem",
    nameItem: "abfalter.sheet.nameItem",
    edit: "abfalter.sheet.edit",
    delete: "abfalter.sheet.delete",
    equip: "abfalter.sheet.equip",
    addItem: "abfalter.sheet.addItem",
    modify: "abfalter.sheet.modify",
    toggle: "abfalter.sheet.toggle",
    inventory: "abfalter.sheet.inventory",
    weapon: "abfalter.sheet.weapon",
    armor: "abfalter.sheet.armor",
    armorHelmet: "abfalter.sheet.armorHelmet",
    advantage: "abfalter.sheet.advantage",
    disadvatange: "abfalter.sheet.disadvatange",
    spell: "abfalter.sheet.spell",
    class: "abfalter.sheet.class",
    spellPath: "abfalter.sheet.spellPath",
    incarnation: "abfalter.sheet.incarnation",
    invocation: "abfalter.sheet.invocation",
    metaMagic: "abfalter.sheet.metaMagic",
    dailyMaint: "abfalter.sheet.dailyMaint",
    turnMaint: "abfalter.sheet.turnMaint",
    currency: "abfalter.sheet.currency",
    proficiency: "abfalter.sheet.proficiency",
    weaponAttack: "abfalter.sheet.weaponAttack",
    discipline: "abfalter.sheet.discipline",
    mentalPattern: "abfalter.sheet.mentalPattern",
    psychicMatrix: "abfalter.sheet.psychicMatrix",
    maintPower: "abfalter.sheet.maintPower",
    kiSealCreature: "abfalter.sheet.kiSealCreature",
    kiTechnique: "abfalter.sheet.kiTechnique",
    martialArt: "abfalter.sheet.martialArt",
    arsMagnus: "abfalter.sheet.arsMagnus",
    elan: "abfalter.sheet.elan",
}

abfalter.magicTab = {
    mproj: "abfalter.magicTab.mproj",
    maccu: "abfalter.magicTab.maccu",
    maccua: "abfalter.magicTab.maccua",
    maccur: "abfalter.magicTab.maccur",
    zeon: "abfalter.magicTab.zeon",
    minnate: "abfalter.magicTab.minnate",
    mtheory: "abfalter.magicTab.mtheory",
    imbalance: "abfalter.magicTab.imbalance",
    offensive: "abfalter.magicTab.offensive",
    defensive: "abfalter.magicTab.defensive",
    offensive1: "abfalter.magicTab.offensive1",
    defensive1: "abfalter.magicTab.defensive1",
    standard: "abfalter.magicTab.standard",
    frompow: "abfalter.magicTab.frompow",
    regenmult: "abfalter.magicTab.regenmult",
    recoverymult: "abfalter.magicTab.recoverymult",
    finalregen: "abfalter.magicTab.finalregen",
    summoning: "abfalter.magicTab.summoning",
    summon: "abfalter.magicTab.summon",
    control: "abfalter.magicTab.control",
    bind: "abfalter.magicTab.bind",
    banish: "abfalter.magicTab.banish",
    metaMagic: "abfalter.magicTab.metaMagic",
    addMetaMagic: "abfalter.magicTab.addMetaMagic",
    turnMaint: "abfalter.magicTab.turnMaint",
    addTurnMaint: "abfalter.magicTab.addTurnMaint",
    dailyMaint: "abfalter.magicTab.dailyMaint",
    addDailyMaint: "abfalter.magicTab.addDailyMaint",
    spellPath: "abfalter.magicTab.spellPath",
    addSpellPath: "abfalter.magicTab.addSpellPath",
    mLevels: "abfalter.magicTab.mLevels",
    fromInt: "abfalter.magicTab.fromInt",
    spellBook: "abfalter.magicTab.spellBook",
    addSpell: "abfalter.magicTab.addSpell",
    invocation: "abfalter.magicTab.invocation",
    invocationOne: "abfalter.magicTab.invocationOne",
    addInvocation: "abfalter.magicTab.addInvocation",
    incarnation: "abfalter.magicTab.incarnation",
    incarnationOne: "abfalter.magicTab.incarnationOne",
    addIncarnation: "abfalter.magicTab.addIncarnation",
    path: "abfalter.magicTab.path",
    spiritual: "abfalter.magicTab.spiritual",
    effect: "abfalter.magicTab.effect",
    automatic: "abfalter.magicTab.automatic",
    detection: "abfalter.magicTab.detection",
    maintType: "abfalter.magicTab.maintType",
    turn: "abfalter.magicTab.turn",
    daily: "abfalter.magicTab.daily",
    bought: "abfalter.magicTab.bought",
    spellPath1: "abfalter.magicTab.spellPath1",
    single: "abfalter.magicTab.single",
    notBought: "abfalter.magicTab.notBought",
    rank: "abfalter.magicTab.rank",
    req: "abfalter.magicTab.req",
    maint: "abfalter.magicTab.maint",
    basic: "abfalter.magicTab.basic",
    intermidiate: "abfalter.magicTab.intermidiate",
    advanced: "abfalter.magicTab.advanced",
    arcane: "abfalter.magicTab.arcane",
    spellDesc: "abfalter.magicTab.spellDesc",
    basicDesc: "abfalter.magicTab.basicDesc",
    intDesc: "abfalter.magicTab.intDesc",
    advDesc: "abfalter.magicTab.advDesc",
    arcDesc: "abfalter.magicTab.arcDesc",
    maintInfo: "abfalter.magicTab.maintInfo",
    spellCost: "abfalter.magicTab.spellCost",
    totalZeon: "abfalter.magicTab.totalZeon",
    spellPathOne: "abfalter.magicTab.spellPathOne",
    dailySpellMaint: "abfalter.magicTab.dailySpellMaint",
    turnSpellMaint: "abfalter.magicTab.turnSpellMaint",
    spellDetails: "abfalter.magicTab.spellDetails",
    onmyodo: "abfalter.magicTab.onmyodo",
    vodoun: "abfalter.magicTab.vodoun",
    shamanism: "abfalter.magicTab.shamanism",
    naturalMagic: "abfalter.magicTab.naturalMagic"
}

abfalter.psychicTab = {
    pp: "abfalter.psychicTab.pp",
    ppotential: "abfalter.psychicTab.ppotential",
    pproj: "abfalter.psychicTab.pproj",
    pmodule: "abfalter.psychicTab.pmodule",
    pmoduleText: "abfalter.psychicTab.pmoduleText",
    pmoduleText2: "abfalter.psychicTab.pmoduleText2",
    pdisc: "abfalter.psychicTab.pdisc",
    pDiscOne: "abfalter.psychicTab.pDiscOne",
    paddDisc: "abfalter.psychicTab.paddDisc",
    freeppMax: "abfalter.psychicTab.freeppMax",
    freepp: "abfalter.psychicTab.freepp",
    fromWP: "abfalter.psychicTab.fromWP",
    maintMatrix: "abfalter.psychicTab.maintMatrix",
    maintMatrixOne: "abfalter.psychicTab.maintMatrixOne",
    numOfSlots: "abfalter.psychicTab.numOfSlots",
    totalppSlots: "abfalter.psychicTab.totalppSlots",
    potency: "abfalter.psychicTab.potency",
    addMaintMatrix: "abfalter.psychicTab.addMaintMatrix",
    mentalPatterns: "abfalter.psychicTab.mentalPatterns",
    mentalPatternsOne: "abfalter.psychicTab.mentalPatternsOne",
    psychicMatrices: "abfalter.psychicTab.psychicMatrices",
    psychicMatricesOne: "abfalter.psychicTab.psychicMatricesOne",
    patternName: "abfalter.psychicTab.patternName",
    totalCost: "abfalter.psychicTab.totalCost",
    cancelled: "abfalter.psychicTab.cancelled",
    addMentalPattern: "abfalter.psychicTab.addMentalPattern",
    addPsychicMatrix: "abfalter.psychicTab.addPsychicMatrix",
    patternInfoB: "abfalter.psychicTab.patternInfoB",
    patternInfoP: "abfalter.psychicTab.patternInfoP",
    maintInfo: "abfalter.psychicTab.maintInfo",
    cancelCost: "abfalter.psychicTab.cancelCost",
    oppPattern: "abfalter.psychicTab.oppPattern",
    maint: "abfalter.psychicTab.maint",
    psychicPotential: "abfalter.psychicTab.psychicPotential",
    psyProj: "abfalter.psychicTab.psyProj"
}

abfalter.kiTab = {
    kiAbilities: "abfalter.kiTab.kiAbilities",
    useOfKi: "abfalter.kiTab.useOfKi",
    descUseOfKi: "abfalter.kiTab.descUseOfKi",
    kiControl: "abfalter.kiTab.kiControl",
    desckiControl: "abfalter.kiTab.desckiControl",
    kiDetection: "abfalter.kiTab.kiDetection",
    desckiDetection: "abfalter.kiTab.desckiDetection",
    kiErudition: "abfalter.kiTab.kiErudition",
    desckiErudition: "abfalter.kiTab.desckiErudition",
    kiCombatAura: "abfalter.kiTab.kiCombatAura",
    desckiCombatAura: "abfalter.kiTab.desckiCombatAura",
    kiPhysDom: "abfalter.kiTab.kiPhysDom",
    desckiPhysDom: "abfalter.kiTab.desckiPhysDom",
    kiPhysChange: "abfalter.kiTab.kiPhysChange",
    desckiPhysChange: "abfalter.kiTab.desckiPhysChange",
    kiSuperiorChange: "abfalter.kiTab.kiSuperiorChange",
    desckiSuperiorChange: "abfalter.kiTab.desckiSuperiorChange",
    kiMultBodies: "abfalter.kiTab.kiMultBodies",
    desckiMultBodies: "abfalter.kiTab.desckiMultBodies",
    kiGreaterMult: "abfalter.kiTab.kiGreaterMult",
    desckiGreaterMult: "abfalter.kiTab.desckiGreaterMult",
    kiArcaneMult: "abfalter.kiTab.kiArcaneMult",
    desckiArcaneMult: "abfalter.kiTab.desckiArcaneMult",
    kiMagnitude: "abfalter.kiTab.kiMagnitude",
    desckiMagnitude: "abfalter.kiTab.descUseOfKi",
    kiArcaneMagn: "abfalter.kiTab.kiArcaneMagn",
    desckiArcaneMagn: "abfalter.kiTab.desckiArcaneMagn",
    kiAgeControl: "abfalter.kiTab.kiAgeControl",
    desckiAgeControl: "abfalter.kiTab.desckiAgeControl",
    kiTechImi: "abfalter.kiTab.kiTechImi",
    desckiTechImi: "abfalter.kiTab.desckiTechImi",
    kiTechPush: "abfalter.kiTab.kiTechPush",
    desckiTechPush: "abfalter.kiTab.desckiTechPush",
    weightElimination: "abfalter.kiTab.weightElimination",
    descweightElimination: "abfalter.kiTab.descweightElimination",
    kiLevitation: "abfalter.kiTab.kiLevitation",
    desckiLevitation: "abfalter.kiTab.desckiLevitation",
    kiObjectMotion: "abfalter.kiTab.kiObjectMotion",
    desckiObjectMotion: "abfalter.kiTab.desckiObjectMotion",
    kiMassMove: "abfalter.kiTab.kiMassMove",
    desckiMassMove: "abfalter.kiTab.desckiMassMove",
    kiFlight: "abfalter.kiTab.kiFlight",
    desckiFlight: "abfalter.kiTab.desckiFlight",
    kiPresenceEx: "abfalter.kiTab.kiPresenceEx",
    desckiPresenceEx: "abfalter.kiTab.desckiPresenceEx",
    kiEnergyArmor: "abfalter.kiTab.kiEnergyArmor",
    desckiEnergyArmor: "abfalter.kiTab.desckiEnergyArmor",
    kiGreaterArmor: "abfalter.kiTab.kiGreaterArmor",
    desckiGreaterArmor: "abfalter.kiTab.desckiGreaterArmor",
    kiArcaneArmor: "abfalter.kiTab.kiArcaneArmor",
    desckiArcaneArmor: "abfalter.kiTab.desckiArcaneArmor",
    kiAuraEx: "abfalter.kiTab.kiAuraEx",
    desckiAuraEx: "abfalter.kiTab.desckiAuraEx",
    kiEleFire: "abfalter.kiTab.kiEleFire",
    desckiEleFire: "abfalter.kiTab.desckiEleFire",
    kiEleWater: "abfalter.kiTab.kiEleWater",
    desckiEleWater: "abfalter.kiTab.desckiEleWater",
    kiEleAir: "abfalter.kiTab.kiEleAir",
    desckiEleAir: "abfalter.kiTab.desckiEleAir",
    kiEleEarth: "abfalter.kiTab.kiEleEarth",
    desckiEleEarth: "abfalter.kiTab.desckiEleEarth",
    kiEleLight: "abfalter.kiTab.kiEleLight",
    desckiEleLight: "abfalter.kiTab.desckiEleLight",
    kiEleDark: "abfalter.kiTab.kiEleDark",
    desckiEleDark: "abfalter.kiTab.desckiEleDark",
    kiIncreaseDmg: "abfalter.kiTab.kiIncreaseDmg",
    desckiIncreaseDmg: "abfalter.kiTab.desckiIncreaseDmg",
    kiIncreaseReach: "abfalter.kiTab.kiIncreaseReach",
    desckiIncreaseReach: "abfalter.kiTab.desckiIncreaseReach",
    kiIncreaseSpd: "abfalter.kiTab.kiIncreaseSpd",
    desckiIncreaseSpd: "abfalter.kiTab.desckiIncreaseSpd",
    kiDestruction: "abfalter.kiTab.kiDestruction",
    desckiDestruction: "abfalter.kiTab.desckiDestruction",
    kiAbsorbtion: "abfalter.kiTab.kiAbsorbtion",
    desckiAbsorbtion: "abfalter.kiTab.desckiAbsorbtion",
    kiPhysShield: "abfalter.kiTab.kiPhysShield",
    desckiPhysShield: "abfalter.kiTab.desckiPhysShield",
    kiTrans: "abfalter.kiTab.useOfKi",
    desckiTrans: "abfalter.kiTab.desckiTrans",
    kiHeal: "abfalter.kiTab.kiHeal",
    desckiHeal: "abfalter.kiTab.desckiHeal",
    kiSupHeal: "abfalter.kiTab.kiSupHeal",
    desckiSupHeal: "abfalter.kiTab.desckiSupHeal",
    kiStabil: "abfalter.kiTab.kiStabil",
    desckiStabil: "abfalter.kiTab.desckiStabil",
    kiLifeSac: "abfalter.kiTab.kiLifeSac",
    desckiLifeSac: "abfalter.kiTab.desckiLifeSa",
    kiUseOfEne: "abfalter.kiTab.kiUseOfEne",
    desckiUseOfEne: "abfalter.kiTab.desckiUseOfEne",
    kiConceal: "abfalter.kiTab.kiConceal",
    desckiConceal: "abfalter.kiTab.desckiConceal",
    kiAuraConceal: "abfalter.kiTab.kiAuraConceal",
    desckiAuraConceal: "abfalter.kiTab.desckiAuraConceal",
    kiFalseDeath: "abfalter.kiTab.kiFalseDeath",
    desckiFalseDeath: "abfalter.kiTab.desckiFalseDeath",
    kiEleminationOfNec: "abfalter.kiTab.kiEleminationOfNec",
    desckiEleminationOfNec: "abfalter.kiTab.desckiEleminationOfNec",
    kiEleImmHeat: "abfalter.kiTab.kiEleImmHeat",
    desckiEleImmHeat: "abfalter.kiTab.desckiEleImmHeat",
    kiEleImmCold: "abfalter.kiTab.kiEleImmCold",
    desckiEleImmCold: "abfalter.kiTab.desckiEleImmCold",
    kiEleImmEle: "abfalter.kiTab.kiEleImmEle",
    desckiEleImmEle: "abfalter.kiTab.desckiEleImmEle",
    kiPenRed: "abfalter.kiTab.kiPenRed",
    desckiPenRed: "abfalter.kiTab.desckiPenRed",
    kiRecovery: "abfalter.kiTab.kiRecovery",
    desckiRecovery: "abfalter.kiTab.desckiRecovery",
    kiRestoreOther: "abfalter.kiTab.kiRestoreOther",
    desckiRestoreOther: "abfalter.kiTab.desckiRestoreOther",
    kiCharacAug: "abfalter.kiTab.kiCharacAug",
    desckiCharacAug: "abfalter.kiTab.desckiCharacAug",
    kiSupCharacAug: "abfalter.kiTab.kiSupCharacAug",
    desckiSupCharacAug: "abfalter.kiTab.desckiSupCharacAug",
    kiImpovTech: "abfalter.kiTab.kiImpovTech",
    desckiImpovTech: "abfalter.kiTab.desckiImpovTech",
    kiInhumanity: "abfalter.kiTab.kiInhumanity",
    desckiInhumanity: "abfalter.kiTab.desckiInhumanity",
    kiZen: "abfalter.kiTab.kiZen",
    desckiZen: "abfalter.kiTab.desckiZen",
    useOfNemesis: "abfalter.kiTab.useOfNemesis",
    descuseOfNemesis: "abfalter.kiTab.descuseOfNemesis",
    nemiArmor: "abfalter.kiTab.nemiArmor",
    descnemiArmor: "abfalter.kiTab.descnemiArmor",
    nemiNoht: "abfalter.kiTab.nemiNoht",
    descnemiNoht: "abfalter.kiTab.descnemiNoht",
    nemiKiCancel: "abfalter.kiTab.nemiKiCancel",
    descnemiKiCancel: "abfalter.kiTab.descnemiKiCancel",
    nemiGreaterKiCancel: "abfalter.kiTab.nemiGreaterKiCancel",
    descnemiGreaterKiCancel: "abfalter.kiTab.descnemiGreaterKiCancel",
    nemiMysticCancel: "abfalter.kiTab.nemiMysticCancel",
    descnemiMysticCancel: "abfalter.kiTab.descnemiMysticCancel",
    nemiGreaterMysticCancel: "abfalter.kiTab.nemiGreaterMysticCancel",
    descnemiGreaterMysticCancel: "abfalter.kiTab.descnemiGreaterMysticCancel",
    nemiMatrixCancel: "abfalter.kiTab.nemiMatrixCancel",
    descnemiMatrixCancel: "abfalter.kiTab.descnemiMatrixCancel",
    nemiGreaterMatrixCancel: "abfalter.kiTab.nemiGreaterMatrixCancel",
    descnemiGreaterMatrixCancel: "abfalter.kiTab.descnemiGreaterMatrixCancel",
    nemiBindCancel: "abfalter.kiTab.nemiBindCancel",
    descnemiBindCancel: "abfalter.kiTab.descnemiBindCancel",
    nemiEmptyExt: "abfalter.kiTab.nemiEmptyExt",
    descnemiEmptyExt: "abfalter.kiTab.descnemiEmptyExt",
    nemiFormOfEmpty: "abfalter.kiTab.nemiFormOfEmpty",
    descnemiFormOfEmpty: "abfalter.kiTab.descnemiFormOfEmpty",
    nemiBodyEmpty: "abfalter.kiTab.nemiBodyEmpty",
    descnemiBodyEmpty: "abfalter.kiTab.descnemiBodyEmpty",
    nemiNoNeeds: "abfalter.kiTab.nemiNoNeeds",
    descnemiNoNeeds: "abfalter.kiTab.descnemiNoNeeds",
    nemiMoveEmpty: "abfalter.kiTab.nemiMoveEmpty",
    descnemiMoveEmpty: "abfalter.kiTab.descnemiMoveEmpty",
    nemiEssenceEmpty: "abfalter.kiTab.nemiEssenceEmpty",
    descnemiEssenceEmpty: "abfalter.kiTab.descnemiEssenceEmpty",
    nemiOneNothing: "abfalter.kiTab.nemiOneNothing",
    descnemiOneNothing: "abfalter.kiTab.descnemiOneNothing",
    nemiAuraEmpty: "abfalter.kiTab.nemiAuraEmpty",
    descnemiAuraEmpty: "abfalter.kiTab.descnemiAuraEmpty",
    nemiUndetectable: "abfalter.kiTab.nemiUndetectable",
    descnemiUndetectable: "abfalter.kiTab.descnemiUndetectable",
    nemiInhumanity: "abfalter.kiTab.nemiInhumanity",
    descnemiInhumanity: "abfalter.kiTab.descnemiInhumanity",
    nemiZen: "abfalter.kiTab.nemiZen",
    descnemiZen: "abfalter.kiTab.descnemiZen",
    addArsMag: "abfalter.kiTab.addArsMag",
    addMartialArt: "abfalter.kiTab.addMartialArt",
    addKiSealCreature: "abfalter.kiTab.addKiSealCreature",
    addKiTechnique: "abfalter.kiTab.addKiTechnique",
    unarmedDmg: "abfalter.kiTab.unarmedDmg",
    baseDmg: "abfalter.kiTab.baseDmg",
    multiplier: "abfalter.kiTab.multiplier",
    finalDmg: "abfalter.kiTab.finalDmg",
    presencexpow: "abfalter.kiTab.presencexpow",
    kiPool: "abfalter.kiTab.kiPool",
    max: "abfalter.kiTab.max",
    accu: "abfalter.kiTab.accu",
    unified: "abfalter.kiTab.unified",
    martialArts: "abfalter.kiTab.martialArts",
    martialArtName: "abfalter.kiTab.martialArtName",
    limits: "abfalter.kiTab.limits",
    kiSeals: "abfalter.kiTab.kiSeal",
    arsMagnus: "abfalter.kiTab.arsMagnus",
    kiTechnique: "abfalter.kiTab.kiTechnique",
    martialKnow: "abfalter.kiTab.martialKnow",
    specialMag: "abfalter.kiTab.specialMag",
    seals: "abfalter.kiTab.seals",
    doors: "abfalter.kiTab.doors",
    dragonSeal: "abfalter.kiTab.dragonSeal",
    limitMors: "abfalter.kiTab.limitMors",
    limitCenobus: "abfalter.kiTab.limitCenobus",
    limitCaelum: "abfalter.kiTab.limitCaelum",
    limitAgon: "abfalter.kiTab.limitAgon",
    limitCruor: "abfalter.kiTab.limitCruor",
    limitTerminus: "abfalter.kiTab.limitTerminus",
    limitCustodium: "abfalter.kiTab.limitCustodium",
    degree: "abfalter.kiTab.degree",
    advanced: "abfalter.kiTab.advanced",
    supreme: "abfalter.kiTab.supreme",
    arcane: "abfalter.kiTab.arcane",
    arsMagInfo: "abfalter.kiTab.arsMagInfo",
    martialInfo: "abfalter.kiTab.martialInfo",
    sealWood: "abfalter.kiTab.sealWood",
    sealMetal: "abfalter.kiTab.sealMetal",
    sealAir: "abfalter.kiTab.sealAir",
    sealWater: "abfalter.kiTab.sealWater",
    sealFire: "abfalter.kiTab.sealFire",
    minor: "abfalter.kiTab.minor",
    major: "abfalter.kiTab.major",
    minorCost: "abfalter.kiTab.minorCost",
    majorCost: "abfalter.kiTab.majorCost",
    kiSealMaster: "abfalter.kiTab.kiSealMaster",
    creatureName: "abfalter.kiTab.creatureName",
    sealType: "abfalter.kiTab.sealType",
    kiSealInfo: "abfalter.kiTab.kiSealInfo",
    ki: "abfalter.kiTab.ki",
    actionInfo: "abfalter.kiTab.actionInfo",
    innatePowerUse: "abfalter.kiTab.innatePowerUse",
    use: "abfalter.kiTab.use",
    action: "abfalter.kiTab.action",
    turn: "abfalter.kiTab.turn",
    variable: "abfalter.kiTab.variable",
    innatePowerMaint: "abfalter.kiTab.innatePowerMaint",
    unifiedMaint: "abfalter.kiTab.unifiedMaint",
    maint: "abfalter.kiTab.maint",
    attack: "abfalter.kiTab.attack",
    defense: "abfalter.kiTab.defense",
    counterAttack: "abfalter.kiTab.counterAttack",
    kiTechInfo: "abfalter.kiTab.kiTechInfo",
    kiSealsCre: "abfalter.kiTab.kiSealsCre",
    frequency: "abfalter.kiTab.frequency"

}

abfalter.armoryTab = {
    wearArmor: "abfalter.armoryTab.wearArmor",
    stats: "abfalter.armoryTab.stats",
    armorStats: "abfalter.armoryTab.armorStats",
    armor: "abfalter.armoryTab.armor",
    addArmor: "abfalter.armoryTab.addArmor",
    prof: "abfalter.armoryTab.prof",
    addProf: "abfalter.armoryTab.addProf",
    quality: "abfalter.armoryTab.quality",
    presence: "abfalter.armoryTab.presence",
    fortitude: "abfalter.armoryTab.fortitude",
    breakage: "abfalter.armoryTab.breakage",
    requir: "abfalter.armoryTab.requir",
    penalty: "abfalter.armoryTab.penalty",
    cut: "abfalter.armoryTab.cut",
    imp: "abfalter.armoryTab.imp",
    thr: "abfalter.armoryTab.thr",
    heat: "abfalter.armoryTab.heat",
    ele: "abfalter.armoryTab.ele",
    cold: "abfalter.armoryTab.cold",
    ene: "abfalter.armoryTab.ene",
    spirit: "abfalter.armoryTab.spirit",
    addHelmet: "abfalter.armoryTab.addHelmet",
    finalHelmet: "abfalter.armoryTab.finalHelmet",
    finalArmor: "abfalter.armoryTab.finalArmor",
    totalNatPen: "abfalter.armoryTab.totalNatPen",
    totalMovePen: "abfalter.armoryTab.totalMovePen",
    profName: "abfalter.armoryTab.profName",
    starting: "abfalter.armoryTab.starting",
    similar: "abfalter.armoryTab.similar",
    mixedClass: "abfalter.armoryTab.mixedClass",
    diffType: "abfalter.armoryTab.diffType",
    wholeClass:"abfalter.armoryTab.wholeClass",
    archetype: "abfalter.armoryTab.archetype",
    style: "abfalter.armoryTab.style",
    mystical: "abfalter.armoryTab.mystical",
    psychic: "abfalter.armoryTab.psychic",
    other: "abfalter.armoryTab.other",
    cCoin: "abfalter.armoryTab.cCoin",
    sCoin: "abfalter.armoryTab.sCoin",
    gCoin: "abfalter.armoryTab.gCoin",
    addCoin: "abfalter.armoryTab.addCoin",
    quantity: "abfalter.armoryTab.quantity",
    currency: "abfalter.armoryTab.currency",
    inventory: "abfalter.armoryTab.inventory",
    addInventory: "abfalter.armoryTab.addInventory",
    dmgBarrier: "abfalter.armoryTab.dmgBarrier",
    dmgRdc: "abfalter.armoryTab.dmgRdc",
    weapons: "abfalter.armoryTab.weapons",
    addWeapons: "abfalter.armoryTab.addWeapons",
    finalDmg: "abfalter.armoryTab.finalDmg",
    totalPerPen: "abfalter.armoryTab.totalPerPen",
    natPen: "abfalter.armoryTab.natPen",
    movePen: "abfalter.armoryTab.movePen",
    perPen: "abfalter.armoryTab.perPen",
    armorValues: "abfalter.armoryTab.armorValues",
    helmet: "abfalter.armoryTab.helmet",
    bodyArmor: "abfalter.armoryTab.bodyArmor",
    armorLocation: "abfalter.armoryTab.armorLocation",
    itemDesc: "abfalter.armoryTab.itemDesc",
    price: "abfalter.armoryTab.price",
    weight: "abfalter.armoryTab.weight",
    rarity: "abfalter.armoryTab.rarity",
    shieldType: "abfalter.armoryTab.shieldType",
    shieldNone: "abfalter.armoryTab.shieldNone",
    shieldBuckler: "abfalter.armoryTab.shieldBuckler",
    shieldNorm: "abfalter.armoryTab.shieldNorm",
    shieldTower: "abfalter.armoryTab.shieldTower",
    wepDetails: "abfalter.armoryTab.wepDetails",
    dmgTypes: "abfalter.armoryTab.dmgTypes",
    primary: "abfalter.armoryTab.primary",
    secondary: "abfalter.armoryTab.Secondary",
    speed: "abfalter.armoryTab.speed",
    complex: "abfalter.armoryTab.complex",
    dmgOpt: "abfalter.armoryTab.dmgOpt",
    twoHand: "abfalter.armoryTab.twoHand",
    twoStr: "abfalter.armoryTab.twoStr",
    twoPresPow: "abfalter.armoryTab.twoPresPow",
    na: "abfalter.armoryTab.na",
    damage: "abfalter.armoryTab.damage",
    atPen: "abfalter.armoryTab.atPen",
    finBreakage: "abfalter.armoryTab.finBreakage",
    shieldSpd: "abfalter.armoryTab.shieldSpd",
    finalSpd: "abfalter.armoryTab.finalSpd"
}

abfalter.settingsTab = {
    openRoll: "abfalter.settingsTab.openRoll",
    fumbleRoll: "abfalter.settingsTab.fumbleRoll",
    charOptions: "abfalter.settingsTab.charOptions",
    presenceMod: "abfalter.settingsTab.presenceMod",
    levelMod: "abfalter.settingsTab.levelMod",
    addClass: "abfalter.settingsTab.addClass",
    active: "abfalter.settingsTab.active",
    notActive: "abfalter.settingsTab.notActive",
    hidden: "abfalter.settingsTab.hidden",
    notHidden: "abfalter.settingsTab.notHidden",
    mysticSettings: "abfalter.settingsTab.mysticSettings",
    magicAttackModule: "abfalter.settingsTab.magicAttackModule",
    magicDefenseModule: "abfalter.settingsTab.magicDefenseModule",
    magicDodgeModule: "abfalter.settingsTab.magicDodgeModule",
    kiSettings: "abfalter.settingsTab.kiSettings",
    unifiedKi: "abfalter.settingsTab.unifiedKi",
    innatePower: "abfalter.settingsTab.innatePower",
    innateType: "abfalter.settingsTab.innateType",
    dragonSeals: "abfalter.settingsTab.dragonSeals",
    psychicSettings: "abfalter.settingsTab.psychicSettings",
    psyAttackModule: "abfalter.settingsTab.psyAttackModule",
    homebrewSettings: "abfalter.settingsTab.homebrewSettings",
    hideCurrency: "abfalter.settingsTab.hideCurrency",
    hidePageObjects: "abfalter.settingsTab.hidePageObjects",
    magicTheory: "abfalter.settingsTab.magicTheory",
    innateMagic: "abfalter.settingsTab.innateMagic",
    summoning: "abfalter.settingsTab.summoning",
    invocation: "abfalter.settingsTab.invocation",
    incarnation: "abfalter.settingsTab.incarnation",
    spellcasting: "abfalter.settingsTab.spellcasting",
    turnMaint: "abfalter.settingsTab.turnMaint",
    mentalPattern: "abfalter.settingsTab.mentalPattern",
    arsMag: "abfalter.settingsTab.arsMag",
    martialArt: "abfalter.settingsTab.martialArt",
    unarmedDmg: "abfalter.settingsTab.unarmedDmg",
    nemesis: "abfalter.settingsTab.nemesis",
    kiSeals: "abfalter.settingsTab.kiSeals",
    kiTechniq: "abfalter.settingsTab.kiTechniq",
    doubles: "abfalter.settingsTab.doubles",
    hideBack: "abfalter.settingsTab.hideBack",
    hideMagic: "abfalter.settingsTab.hideMagic",
    hidePsy: "abfalter.settingsTab.hidePsy",
    hideKi: "abfalter.settingsTab.hideKi",
    hideBio: "abfalter.settingsTab.hideBio",
    activateShield: "abfalter.settingsTab.activateShield",
    classLevels: "abfalter.settingsTab.classLevels",
    settingsWip: "abfalter.settingsTab.settingsWip",
    increasedStr: "abfalter.settingsTab.increasedStr",
    tempWip: "abfalter.settingsTab.tempWip"
}

abfalter.dialogs = {
    roll: "abfalter.dialogs.roll",
    cancel: "abfalter.dialogs.cancel",
    diceRoller: "abfalter.dialogs.diceRoller",
    noAtkSelf: "abfalter.dialogs.noAtkSelf",
    noActor: "abfalter.dialogs.noActor",
    mustTarget: "abfalter.dialogs.mustTarget",
    noMultiSelect: "abfalter.dialogs.noMultiSelect",
    noSelectToken: "abfalter.dialogs.noSelectToken",
    wrongScene: "abfalter.dialogs.wrongScene",
    aoeAttack: "abfalter.dialogs.aoeAttack",
    modifier: "abfalter.dialogs.modifier",
    openRoll: "abfalter.dialogs.openRoll",
    fumble: "abfalter.dialogs.fumble",
    fumbleSeverity: "abfalter.dialogs.fumbleSeverity",
    fumbleSeverity2: "abfalter.dialogs.fumbleSeverity2",
    success: "abfalter.dialogs.success",
    failure: "abfalter.dialogs.failure"
}

abfalter.globalSettings = {
    spiritDmg: "abfalter.globalSettings.spiritDmg",
    spiritDetail: "abfalter.globalSettings.spiritDetail",
    fumbleName: "abfalter.globalSettings.fumbleName",
    fumbleDetail: "abfalter.globalSettings.fumbleDetail",
    meterName: "abfalter.globalSettings.meterName",
    meterDetail: "abfalter.globalSettings.meterDetail"
}